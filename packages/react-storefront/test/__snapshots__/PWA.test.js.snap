// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PWA should render amp-install-service worker when amp==true 1`] = `
<TestProvider history={{...}} app={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-PWA)>
        <inject-PWA classes={{...}}>
          <PWA classes={{...}} app={{...}} history={{...}} router={{...}} amp={true}>
            <Provider nextId={[Function]} errorReporter={[undefined]}>
              <inject-ErrorBoundary-with-app-history onError={[undefined]}>
                <ErrorBoundary onError={[Function]} app={{...}} history={{...}}>
                  <WithStyles(CssBaseline)>
                    <CssBaseline classes={{...}} />
                  </WithStyles(CssBaseline)>
                  <HelmetWrapper defer={true} encodeSpecialCharacters={true}>
                    <SideEffect(NullComponent) defer={true} encodeSpecialCharacters={true} htmlAttributes={{...}} title={{...}} titleAttributes={{...}} meta={{...}} link={{...}}>
                      <NullComponent defer={true} encodeSpecialCharacters={true} htmlAttributes={{...}} title={{...}} titleAttributes={{...}} meta={{...}} link={{...}} />
                    </SideEffect(NullComponent)>
                  </HelmetWrapper>
                  <HelmetWrapper defer={true} encodeSpecialCharacters={true}>
                    <SideEffect(NullComponent) defer={true} encodeSpecialCharacters={true} script={{...}}>
                      <NullComponent defer={true} encodeSpecialCharacters={true} script={{...}} />
                    </SideEffect(NullComponent)>
                  </HelmetWrapper>
                  <amp-install-serviceworker src="https://localhost/service-worker.js" data-iframe-src="https://localhost/pwa/install-service-worker.html" layout="nodisplay" />
                  <div>
                    Foo
                  </div>
                </ErrorBoundary>
              </inject-ErrorBoundary-with-app-history>
            </Provider>
          </PWA>
        </inject-PWA>
      </WithStyles(inject-PWA)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`PWA should render children 1`] = `
<TestProvider history={{...}} app={{...}}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-PWA)>
        <inject-PWA classes={{...}}>
          <PWA classes={{...}} app={{...}} history={{...}} router={{...}} amp={false}>
            <Provider nextId={[Function]} errorReporter={[undefined]}>
              <inject-ErrorBoundary-with-app-history onError={[undefined]}>
                <ErrorBoundary onError={[Function]} app={{...}} history={{...}}>
                  <WithStyles(CssBaseline)>
                    <CssBaseline classes={{...}} />
                  </WithStyles(CssBaseline)>
                  <HelmetWrapper defer={true} encodeSpecialCharacters={true}>
                    <SideEffect(NullComponent) defer={true} encodeSpecialCharacters={true} htmlAttributes={{...}} title={{...}} titleAttributes={{...}} meta={{...}} link={{...}}>
                      <NullComponent defer={true} encodeSpecialCharacters={true} htmlAttributes={{...}} title={{...}} titleAttributes={{...}} meta={{...}} link={{...}} />
                    </SideEffect(NullComponent)>
                  </HelmetWrapper>
                  <div>
                    foo
                  </div>
                </ErrorBoundary>
              </inject-ErrorBoundary-with-app-history>
            </Provider>
          </PWA>
        </inject-PWA>
      </WithStyles(inject-PWA)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;
